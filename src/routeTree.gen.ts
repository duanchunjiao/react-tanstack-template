/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RequestListIndexRouteImport } from './routes/request-list/index'
import { Route as QueryListIndexRouteImport } from './routes/query-list/index'
import { Route as AuthIndexRouteImport } from './routes/auth/index'
import { Route as DynamicRouteIdRouteImport } from './routes/dynamic-route/$id'
import { Route as QueryListDetailsIndexRouteImport } from './routes/query-list/details/index'
import { Route as AuthRegisterIndexRouteImport } from './routes/auth/register/index'
import { Route as AuthLoginIndexRouteImport } from './routes/auth/login/index'

const DynamicRouteIndexLazyRouteImport = createFileRoute('/dynamic-route/')()

const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DynamicRouteIndexLazyRoute = DynamicRouteIndexLazyRouteImport.update({
  id: '/dynamic-route/',
  path: '/dynamic-route/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/dynamic-route/index.lazy').then((d) => d.Route),
)
const RequestListIndexRoute = RequestListIndexRouteImport.update({
  id: '/request-list/',
  path: '/request-list/',
  getParentRoute: () => rootRouteImport,
} as any)
const QueryListIndexRoute = QueryListIndexRouteImport.update({
  id: '/query-list/',
  path: '/query-list/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const DynamicRouteIdRoute = DynamicRouteIdRouteImport.update({
  id: '/dynamic-route/$id',
  path: '/dynamic-route/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const QueryListDetailsIndexRoute = QueryListDetailsIndexRouteImport.update({
  id: '/query-list/details/',
  path: '/query-list/details/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterIndexRoute = AuthRegisterIndexRouteImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginIndexRoute = AuthLoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/dynamic-route/$id': typeof DynamicRouteIdRoute
  '/auth/': typeof AuthIndexRoute
  '/query-list': typeof QueryListIndexRoute
  '/request-list': typeof RequestListIndexRoute
  '/dynamic-route': typeof DynamicRouteIndexLazyRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/query-list/details': typeof QueryListDetailsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dynamic-route/$id': typeof DynamicRouteIdRoute
  '/auth': typeof AuthIndexRoute
  '/query-list': typeof QueryListIndexRoute
  '/request-list': typeof RequestListIndexRoute
  '/dynamic-route': typeof DynamicRouteIndexLazyRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/query-list/details': typeof QueryListDetailsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/dynamic-route/$id': typeof DynamicRouteIdRoute
  '/auth/': typeof AuthIndexRoute
  '/query-list/': typeof QueryListIndexRoute
  '/request-list/': typeof RequestListIndexRoute
  '/dynamic-route/': typeof DynamicRouteIndexLazyRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/auth/register/': typeof AuthRegisterIndexRoute
  '/query-list/details/': typeof QueryListDetailsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/dynamic-route/$id'
    | '/auth/'
    | '/query-list'
    | '/request-list'
    | '/dynamic-route'
    | '/auth/login'
    | '/auth/register'
    | '/query-list/details'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dynamic-route/$id'
    | '/auth'
    | '/query-list'
    | '/request-list'
    | '/dynamic-route'
    | '/auth/login'
    | '/auth/register'
    | '/query-list/details'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/dynamic-route/$id'
    | '/auth/'
    | '/query-list/'
    | '/request-list/'
    | '/dynamic-route/'
    | '/auth/login/'
    | '/auth/register/'
    | '/query-list/details/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DynamicRouteIdRoute: typeof DynamicRouteIdRoute
  QueryListIndexRoute: typeof QueryListIndexRoute
  RequestListIndexRoute: typeof RequestListIndexRoute
  DynamicRouteIndexLazyRoute: typeof DynamicRouteIndexLazyRoute
  QueryListDetailsIndexRoute: typeof QueryListDetailsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dynamic-route/': {
      id: '/dynamic-route/'
      path: '/dynamic-route'
      fullPath: '/dynamic-route'
      preLoaderRoute: typeof DynamicRouteIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/request-list/': {
      id: '/request-list/'
      path: '/request-list'
      fullPath: '/request-list'
      preLoaderRoute: typeof RequestListIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/query-list/': {
      id: '/query-list/'
      path: '/query-list'
      fullPath: '/query-list'
      preLoaderRoute: typeof QueryListIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/dynamic-route/$id': {
      id: '/dynamic-route/$id'
      path: '/dynamic-route/$id'
      fullPath: '/dynamic-route/$id'
      preLoaderRoute: typeof DynamicRouteIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/query-list/details/': {
      id: '/query-list/details/'
      path: '/query-list/details'
      fullPath: '/query-list/details'
      preLoaderRoute: typeof QueryListDetailsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register/': {
      id: '/auth/register/'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthIndexRoute: typeof AuthIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthIndexRoute: AuthIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DynamicRouteIdRoute: DynamicRouteIdRoute,
  QueryListIndexRoute: QueryListIndexRoute,
  RequestListIndexRoute: RequestListIndexRoute,
  DynamicRouteIndexLazyRoute: DynamicRouteIndexLazyRoute,
  QueryListDetailsIndexRoute: QueryListDetailsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
